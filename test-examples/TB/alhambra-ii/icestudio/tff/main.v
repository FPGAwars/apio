// Code generated by Icestudio 0.9.2w202204260904

`default_nettype none

//---- Top entity
module main (
 input vclk,
 output v8bfc7f,
 output [0:6] vinit
);
 wire w0;
 wire w1;
 assign v8bfc7f = w0;
 assign w1 = vclk;
 v786767 vbc37d2 (
  .v4642b6(w0),
  .v6dda25(w1)
 );
 assign vinit = 7'b0000000;
endmodule

//---- Top entity
module v786767 #(
 parameter v8bcde4 = 0
) (
 input v6dda25,
 output v4642b6
);
 localparam p3 = v8bcde4;
 wire w0;
 wire w1;
 wire w2;
 wire w4;
 assign v4642b6 = w2;
 assign w4 = v6dda25;
 assign w2 = w1;
 v3676a0 v14ac37 (
  .vcbab45(w0),
  .v0e28cb(w1)
 );
 v053dc2 #(
  .v71e305(p3)
 ) vb6ab02 (
  .vf54559(w0),
  .ve8318d(w1),
  .va4102a(w4)
 );
endmodule

//---------------------------------------------------
//-- TFF
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- System TFF: It toogles its output on every system cycle
//---------------------------------------------------
//---- Top entity
module v3676a0 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v3676a0_vd54ca1 vd54ca1 (
  .a(w0),
  .q(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NOT gate (Verilog implementation)
//---------------------------------------------------

module v3676a0_vd54ca1 (
 input a,
 output q
);
 //-- NOT Gate
 assign q = ~a;
 
 
endmodule
//---- Top entity
module v053dc2 #(
 parameter v71e305 = 0
) (
 input va4102a,
 input vf54559,
 output ve8318d
);
 localparam p2 = v71e305;
 wire w0;
 wire w1;
 wire w3;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w3 = vf54559;
 v053dc2_vb8adf8 #(
  .INI(p2)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w3)
 );
endmodule

//---------------------------------------------------
//-- DFF
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- D Flip-flop (verilog implementation)
//---------------------------------------------------

module v053dc2_vb8adf8 #(
 parameter INI = 0
) (
 input clk,
 input d,
 output q
);
 //-- Initial value
 reg q = INI;
 
 //-- Capture the input data  
 //-- on the rising edge of  
 //-- the system clock
 always @(posedge clk)
   q <= d;
endmodule
