name: build-darwin-arm64-installer

on:
  # For now we use only manual triggers.
  workflow_dispatch:  # ðŸ‘ˆ Enables manual trigger

jobs:
  build-darwin-arm64-installer:
    runs-on: macos-latest

    steps:
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Adjust version as needed


      - name: Checkout the apio repo
        uses: actions/checkout@v4
        with:
          path: apio-repo


      - name: Pip install apio.
        run: |
          python -m pip install --upgrade pip
          pip install -e apio-repo


      - name: Pip install pyinstaller
        run: |
          pip install pyinstaller


      - name: Extract apio version
        run: |
          echo "APIO_VERSION=$(pip show apio | grep Version: | cut -d ' ' -f2)" >> $GITHUB_ENV


      - name: Echo apio version
        run: |
          echo "$APIO_VERSION"


      - name: Setup working directories.
        run: |
          mkdir _work
          mkdir _dist
          mkdir _scripts
          pwd
          ls -la .


      - name: Run pyinstaller
        run: |
          pyinstaller \
            --workpath _work \
            --distpath _dist \
            apio-repo/.github/workflows/resources/apio-pyinstaller.spec
          echo "_dist:"
          ls -al _dist
          echo "_dist/apio:"
          ls -al _dist/apio


      - name: Add LICENSE file
        run: |
          cp apio-repo/LICENSE _dist/apio
          echo "_dist:"
          ls -al _dist
          echo "_dist/apio:"
          ls -al _dist/apio


      - name: Add INFO file
        run: |
          echo "Build information" >  _dist/apio/INFO
          echo "Date:         $(date +"%Y-%m-%d %H:%M:%S %Z")" >>  _dist/apio/INFO
          echo "Run ID:       $GITHUB_RUN_ID"" >>  _dist/apio/INFO
          echo "Run Number:   $GITHUB_RUN_NUMBER" >>  _dist/apio/INFO
          echo "Commit SHA:   $GITHUB_SHA" >>  _dist/apio/INFO
          echo "Branch:       ${GITHUB_REF#refs/heads/}" >>  _dist/apio/INFO
          echo "_dist/apio:"
          ls -al _dist/apio
          cat _dist/apio/INFO


      - name: Rename app to Apio-X.X.X
        run: |
          mv _dist/apio "_dist/Apio-${APIO_VERSION}"
          echo "_dist:"
          ls -al _dist


      - name: Create installer scripts
        run: |
          sed "s/\[APIO-VERSION\]/$APIO_VERSION/g" apio-repo/.github/workflows/resources/darwin-installer-resources/postinstall.template > _scripts/postinstall
          chmod 755 _scripts/postinstall
          echo "_scripts:"
          ls -al _scripts
          echo "_scripts/postinstall:"
          cat _scripts/postinstall
          
          
      - name: Run pkgbuild
        run: |
          pkgbuild --root _dist \
                   --install-location /Applications \
                   --identifier "io.github.fpgawars.apio" \
                   --version "${{env.APIO_VERSION}}" \
                   --scripts _scripts \
                   --ownership recommended \
                   apio-component.pkg
          pwd
          ls -al


      - name: Run productbuild
        run: |
          productbuild --resources apio-repo/.github/workflows/resources/darwin-installer-resources \
                       --distribution apio-repo/.github/workflows/resources/darwin-installer-distribution.xml \
                       --package-path . \
                       "apio-darwin-arm64-${{env.APIO_VERSION}}-installer.pkg"
          pwd
          ls -al


      - name: Export the installer file as an artifact.
        uses: actions/upload-artifact@v4
        with:
          name: "apio-darwin-arm64-${{env.APIO_VERSION}}-installer"
          path: "apio-darwin-arm64-${{env.APIO_VERSION}}-installer.pkg"

      
