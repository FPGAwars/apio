"""Apio's scons handler dispatcher."""

# -*- coding: utf-8 -*-
# -- This file is part of the Apio project
# -- (C) 2016-2024 FPGAwars
# -- Authors Juan Gonzáles, Jesús Arroyo
# -- Licence GPLv2

import os
import debugpy
import click
from SCons.Script import ARGUMENTS, COMMAND_LINE_TARGETS
from apio.scons import ice40_scons, ecp5_scons, gowin_scons
from apio.scons.apio_env import ApioEnv, SconsArch


# -- If system env var APIO_SCONS_DEBUGGER is defined, regardless of its value,
# -- we wait on a remote debugger to be attached, e.g. from Visual Studio Code.
if os.getenv("APIO_SCONS_DEBUGGER") is not None:
    click.secho(f"Env var 'APIO_SCONS_DEBUGGER' was detected.")
    port = 5678
    click.secho(f"Apio SCons for remote debugger on port localhost:{port}.")
    debugpy.listen(port)
    click.secho(
        f"Attach Visual Studio Code remote python debugger to port {port}.",
        fg="magenta",
        color=True,
    )
    # -- Block until the debugger connetcs.
    debugpy.wait_for_client()
    # -- Here the remote debugger is attached and the program continues.
    click.secho(
        "Remote debugger is attached, program continues...",
        fg="green",
        color=True,
    )

# -- Get the debug flag. If True, the scons code will print debug information.
val = ARGUMENTS.get("debug", "False")
is_debug = {"True": True, "False": False}[val]

# -- Get the arch. We use it to dispatch the scons handler.
arch = ARGUMENTS.get("fpga_arch", None)

# -- Dispatch to the scons handler for this architecture.
if arch == "ice40":
    apio_env = ApioEnv(
        SconsArch.ICE40, ARGUMENTS, COMMAND_LINE_TARGETS, is_debug
    )
    ice40_scons.scons_handler(apio_env)
elif arch == "ecp5":
    apio_env = ApioEnv(
        SconsArch.ECP5, ARGUMENTS, COMMAND_LINE_TARGETS, is_debug
    )
    ecp5_scons.scons_handler(apio_env)
elif arch == "gowin":
    apio_env = ApioEnv(
        SconsArch.GOWIN, ARGUMENTS, COMMAND_LINE_TARGETS, is_debug
    )
    gowin_scons.scons_handler(apio_env)
else:
    print(f"Apio SConstruct dispatch error: unknown arch [{arch}]")
